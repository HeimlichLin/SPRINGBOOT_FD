#spring.datasource.initialize=true
#validate | update | create | create-drop
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

#Oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
#H2
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#MariaDB
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

spring.datasource.url=${db.url}
spring.datasource.username=${db.user}
spring.datasource.password=${db.password}

spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.max_fetch_depth=3
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.connection.isolation=1
spring.jpa.properties.hibernate.format_sql=${spring.jpa.show-sql}
spring.jpa.properties.hibernate.use_sql_comments=${spring.jpa.show-sql}

# Keep the connection alive if idle for a long time
# Reconnect if lost connection
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.initialization-fail-timeout=1

# You may google it 'sql server remote query timeout' and 'mariadb wait timeout'.
# Because mariadb wait timeout is 28800 seconds(i.e. 8 hours) and
# sql server remote query timeout(or we say wait timeout) is 600000 milliseconds(i.e. 10  minutes).
# Above of all, I must set the connection wait timeout less than min(above of all).
#spring.datasource.time-between-eviction-runs-millis=18800
spring.datasource.hikari.idle-timeout=540000

spring.jpa.open-in-view=false