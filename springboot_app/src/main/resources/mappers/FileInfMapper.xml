<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="idv.heimlich.springboot.entity.mapper.FileInfMapper">
  <resultMap id="BaseResultMap" type="idv.heimlich.springboot.entity.po.FileInf">
    <id column="TRANSACTION" jdbcType="VARCHAR" property="transaction" />
    <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
    <result column="CREA_TIME" jdbcType="TIMESTAMP" property="creaTime" />
    <result column="FILE_SIZE" jdbcType="DECIMAL" property="fileSize" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="idv.heimlich.springboot.entity.po.FileInf">
    <result column="CONTENT" jdbcType="BLOB" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANSACTION, FILE_NAME, CREA_TIME, FILE_SIZE
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="idv.heimlich.springboot.entity.po.FileInfExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PCLMSMGR.FILE_INF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="idv.heimlich.springboot.entity.po.FileInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from PCLMSMGR.FILE_INF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from PCLMSMGR.FILE_INF
    where TRANSACTION = #{transaction,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PCLMSMGR.FILE_INF
    where TRANSACTION = #{transaction,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="idv.heimlich.springboot.entity.po.FileInfExample">
    delete from PCLMSMGR.FILE_INF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="idv.heimlich.springboot.entity.po.FileInf">
    insert into PCLMSMGR.FILE_INF (TRANSACTION, FILE_NAME, CREA_TIME, 
      FILE_SIZE, CONTENT)
    values (#{transaction,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{creaTime,jdbcType=TIMESTAMP}, 
      #{fileSize,jdbcType=DECIMAL}, #{content,jdbcType=BLOB})
  </insert>
  <insert id="insertSelective" parameterType="idv.heimlich.springboot.entity.po.FileInf">
    insert into PCLMSMGR.FILE_INF
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transaction != null">
        TRANSACTION,
      </if>
      <if test="fileName != null">
        FILE_NAME,
      </if>
      <if test="creaTime != null">
        CREA_TIME,
      </if>
      <if test="fileSize != null">
        FILE_SIZE,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transaction != null">
        #{transaction,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="creaTime != null">
        #{creaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=DECIMAL},
      </if>
      <if test="content != null">
        #{content,jdbcType=BLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="idv.heimlich.springboot.entity.po.FileInfExample" resultType="java.lang.Long">
    select count(*) from PCLMSMGR.FILE_INF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PCLMSMGR.FILE_INF
    <set>
      <if test="record.transaction != null">
        TRANSACTION = #{record.transaction,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.creaTime != null">
        CREA_TIME = #{record.creaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileSize != null">
        FILE_SIZE = #{record.fileSize,jdbcType=DECIMAL},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=BLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update PCLMSMGR.FILE_INF
    set TRANSACTION = #{record.transaction,jdbcType=VARCHAR},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      CREA_TIME = #{record.creaTime,jdbcType=TIMESTAMP},
      FILE_SIZE = #{record.fileSize,jdbcType=DECIMAL},
      CONTENT = #{record.content,jdbcType=BLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PCLMSMGR.FILE_INF
    set TRANSACTION = #{record.transaction,jdbcType=VARCHAR},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      CREA_TIME = #{record.creaTime,jdbcType=TIMESTAMP},
      FILE_SIZE = #{record.fileSize,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="idv.heimlich.springboot.entity.po.FileInf">
    update PCLMSMGR.FILE_INF
    <set>
      <if test="fileName != null">
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="creaTime != null">
        CREA_TIME = #{creaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileSize != null">
        FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=BLOB},
      </if>
    </set>
    where TRANSACTION = #{transaction,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="idv.heimlich.springboot.entity.po.FileInf">
    update PCLMSMGR.FILE_INF
    set FILE_NAME = #{fileName,jdbcType=VARCHAR},
      CREA_TIME = #{creaTime,jdbcType=TIMESTAMP},
      FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
      CONTENT = #{content,jdbcType=BLOB}
    where TRANSACTION = #{transaction,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="idv.heimlich.springboot.entity.po.FileInf">
    update PCLMSMGR.FILE_INF
    set FILE_NAME = #{fileName,jdbcType=VARCHAR},
      CREA_TIME = #{creaTime,jdbcType=TIMESTAMP},
      FILE_SIZE = #{fileSize,jdbcType=DECIMAL}
    where TRANSACTION = #{transaction,jdbcType=VARCHAR}
  </update>
</mapper>